{"ast":null,"code":"var _jsxFileName = \"/Users/hectorcarretero/Documents/TFM/client/src/terminals/components/IntakeList.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { updateIntakes } from '../../shared/IntakeFunctions';\nimport './IntakeList.css';\nimport Intake from './Intake';\n\nconst IntakeList = props => {\n  const [currentIntakes, setCurrentIntakes] = useState(props.intakes);\n\n  const saveNewProgram = () => {\n    let newIntakes = updateIntakes();\n    console.log(newIntakes);\n  };\n\n  if (props.intakes.lenght === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"There should be a list of the programed intakes but it is empty.\"));\n  }\n\n  if (!props.program) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light thead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, \"N\\xFAmero de toma\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, \"Hora\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, \"Medicamento\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, props.intakes.map(intake => {\n      return /*#__PURE__*/React.createElement(Intake, {\n        key: intake.id,\n        number: intake.number,\n        date: intake.date,\n        hour: intake.hour,\n        med: intake.med,\n        program: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }\n      });\n    }))));\n  }\n\n  if (props.program) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light thead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, \"N\\xFAmero de toma\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, \"Hora\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"noBorderCell text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, \"Medicamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center tableCorner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, props.intakes.map(intake => {\n      return /*#__PURE__*/React.createElement(Intake, {\n        key: intake.id,\n        number: intake.number,\n        date: intake.date,\n        hour: intake.hour,\n        med: intake.med,\n        program: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/ControlCentre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttonAddRow btn btn-danger float-right buttonBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 43\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: saveNewProgram,\n      className: \"buttonAddRow btn btn-success float-right buttonBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Save\"));\n  }\n};\n\nexport default IntakeList;","map":{"version":3,"sources":["/Users/hectorcarretero/Documents/TFM/client/src/terminals/components/IntakeList.js"],"names":["React","useState","Link","updateIntakes","Intake","IntakeList","props","currentIntakes","setCurrentIntakes","intakes","saveNewProgram","newIntakes","console","log","lenght","program","map","intake","id","number","date","hour","med"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Link } from 'react-router-dom';\nimport {updateIntakes} from '../../shared/IntakeFunctions'\n\nimport './IntakeList.css'\n\nimport Intake from './Intake'\n\nconst IntakeList = props => {\n    const [currentIntakes, setCurrentIntakes] = useState(props.intakes);\n    const saveNewProgram = () => {\n       let newIntakes = updateIntakes();\n       console.log(newIntakes)\n    }\n    if (props.intakes.lenght === 0) {\n        return (\n            <div>\n                <h2>There should be a list of the programed intakes but it is empty.</h2>\n            </div>\n        )\n    }\n    if (!props.program) {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                   \n                        <thead className=\"thead-light thead\">\n                            <tr>\n                                <th scope=\"col\" className=\"noBorderCell\">Número de toma</th>\n                                <th scope=\"col\" className=\"noBorderCell\">Fecha</th>\n                                <th scope=\"col\" className=\"noBorderCell\">Hora</th>\n                                <th scope=\"col\" className=\"noBorderCell\">Medicamento</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {props.intakes.map(intake => {\n                                return <Intake key={intake.id} number={intake.number} date={intake.date} hour={intake.hour} med={intake.med} program={false}></Intake>\n                            })}\n                        \n                    </tbody>\n                </table>\n            </div>\n\n        )\n    }\n    if (props.program) {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-bordered table-hover\">\n                        <thead className=\"thead-light thead\">\n                            <tr>\n                                <th scope=\"col\" className=\"noBorderCell text-center\">Número de toma</th>\n                                <th scope=\"col\" className=\"noBorderCell text-center\">Fecha</th>\n                                <th scope=\"col\" className=\"noBorderCell text-center\">Hora</th>\n                                <th scope=\"col\" className=\"noBorderCell text-center\">Medicamento</th>\n                                <th className=\"text-center tableCorner\"></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {props.intakes.map(intake => {\n                                return <Intake key={intake.id} number={intake.number} date={intake.date} hour={intake.hour} med={intake.med} program={true}></Intake>\n                            })}\n                    </tbody>\n                </table>\n                <Link to=\"/ControlCentre\"><button className=\"buttonAddRow btn btn-danger float-right buttonBottom\">Cancel</button></Link>\n                <button onClick={saveNewProgram} className=\"buttonAddRow btn btn-success float-right buttonBottom\">Save</button>\n            </div>\n\n        )\n    }\n}\n\nexport default IntakeList"]},"metadata":{},"sourceType":"module"}